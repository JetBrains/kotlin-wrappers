// Generated by Karakum - do not modify it manually!

package electron.core


sealed external interface WebContentsEvent {
    sealed interface AUDIO_STATE_CHANGED : node.events.LegacyEventType
    sealed interface BEFORE_INPUT_EVENT : node.events.LegacyEventType
    sealed interface BLUR : node.events.LegacyEventType
    sealed interface CERTIFICATE_ERROR : node.events.LegacyEventType
    sealed interface CONSOLE_MESSAGE : node.events.LegacyEventType
    sealed interface CONTENT_BOUNDS_UPDATED : node.events.LegacyEventType
    sealed interface CONTEXT_MENU : node.events.LegacyEventType
    sealed interface CURSOR_CHANGED : node.events.LegacyEventType
    sealed interface DESTROYED : node.events.LegacyEventType
    sealed interface DEVTOOLS_CLOSED : node.events.LegacyEventType
    sealed interface DEVTOOLS_FOCUSED : node.events.LegacyEventType
    sealed interface DEVTOOLS_OPEN_URL : node.events.LegacyEventType
    sealed interface DEVTOOLS_OPENED : node.events.LegacyEventType
    sealed interface DEVTOOLS_RELOAD_PAGE : node.events.LegacyEventType
    sealed interface DID_ATTACH_WEBVIEW : node.events.LegacyEventType
    sealed interface DID_CHANGE_THEME_COLOR : node.events.LegacyEventType
    sealed interface DID_CREATE_WINDOW : node.events.LegacyEventType
    sealed interface DID_FAIL_LOAD : node.events.LegacyEventType
    sealed interface DID_FAIL_PROVISIONAL_LOAD : node.events.LegacyEventType
    sealed interface DID_FINISH_LOAD : node.events.LegacyEventType
    sealed interface DID_FRAME_FINISH_LOAD : node.events.LegacyEventType
    sealed interface DID_FRAME_NAVIGATE : node.events.LegacyEventType
    sealed interface DID_NAVIGATE : node.events.LegacyEventType
    sealed interface DID_NAVIGATE_IN_PAGE : node.events.LegacyEventType
    sealed interface DID_REDIRECT_NAVIGATION : node.events.LegacyEventType
    sealed interface DID_START_LOADING : node.events.LegacyEventType
    sealed interface DID_START_NAVIGATION : node.events.LegacyEventType
    sealed interface DID_STOP_LOADING : node.events.LegacyEventType
    sealed interface DOM_READY : node.events.LegacyEventType
    sealed interface ENTER_HTML_FULL_SCREEN : node.events.LegacyEventType
    sealed interface FOCUS : node.events.LegacyEventType
    sealed interface FOUND_IN_PAGE : node.events.LegacyEventType
    sealed interface FRAME_CREATED : node.events.LegacyEventType
    sealed interface INPUT_EVENT : node.events.LegacyEventType
    sealed interface IPC_MESSAGE : node.events.LegacyEventType
    sealed interface IPC_MESSAGE_SYNC : node.events.LegacyEventType
    sealed interface LEAVE_HTML_FULL_SCREEN : node.events.LegacyEventType
    sealed interface LOGIN : node.events.LegacyEventType
    sealed interface MEDIA_PAUSED : node.events.LegacyEventType
    sealed interface MEDIA_STARTED_PLAYING : node.events.LegacyEventType
    sealed interface PAGE_FAVICON_UPDATED : node.events.LegacyEventType
    sealed interface PAGE_TITLE_UPDATED : node.events.LegacyEventType
    sealed interface PAINT : node.events.LegacyEventType
    sealed interface PLUGIN_CRASHED : node.events.LegacyEventType
    sealed interface PREFERRED_SIZE_CHANGED : node.events.LegacyEventType
    sealed interface PRELOAD_ERROR : node.events.LegacyEventType
    sealed interface RENDER_PROCESS_GONE : node.events.LegacyEventType
    sealed interface RESPONSIVE : node.events.LegacyEventType
    sealed interface SELECT_BLUETOOTH_DEVICE : node.events.LegacyEventType
    sealed interface SELECT_CLIENT_CERTIFICATE : node.events.LegacyEventType
    sealed interface UNRESPONSIVE : node.events.LegacyEventType
    sealed interface UPDATE_TARGET_URL : node.events.LegacyEventType
    sealed interface WILL_ATTACH_WEBVIEW : node.events.LegacyEventType
    sealed interface WILL_FRAME_NAVIGATE : node.events.LegacyEventType
    sealed interface WILL_NAVIGATE : node.events.LegacyEventType
    sealed interface WILL_PREVENT_UNLOAD : node.events.LegacyEventType
    sealed interface WILL_REDIRECT : node.events.LegacyEventType
    sealed interface ZOOM_CHANGED : node.events.LegacyEventType

    companion object {
        @seskar.js.JsValue("audio-state-changed")
        val AUDIO_STATE_CHANGED: AUDIO_STATE_CHANGED

        @seskar.js.JsValue("before-input-event")
        val BEFORE_INPUT_EVENT: BEFORE_INPUT_EVENT

        @seskar.js.JsValue("blur")
        val BLUR: BLUR

        @seskar.js.JsValue("certificate-error")
        val CERTIFICATE_ERROR: CERTIFICATE_ERROR

        @seskar.js.JsValue("console-message")
        val CONSOLE_MESSAGE: CONSOLE_MESSAGE

        @seskar.js.JsValue("content-bounds-updated")
        val CONTENT_BOUNDS_UPDATED: CONTENT_BOUNDS_UPDATED

        @seskar.js.JsValue("context-menu")
        val CONTEXT_MENU: CONTEXT_MENU

        @seskar.js.JsValue("cursor-changed")
        val CURSOR_CHANGED: CURSOR_CHANGED

        @seskar.js.JsValue("destroyed")
        val DESTROYED: DESTROYED

        @seskar.js.JsValue("devtools-closed")
        val DEVTOOLS_CLOSED: DEVTOOLS_CLOSED

        @seskar.js.JsValue("devtools-focused")
        val DEVTOOLS_FOCUSED: DEVTOOLS_FOCUSED

        @seskar.js.JsValue("devtools-open-url")
        val DEVTOOLS_OPEN_URL: DEVTOOLS_OPEN_URL

        @seskar.js.JsValue("devtools-opened")
        val DEVTOOLS_OPENED: DEVTOOLS_OPENED

        @seskar.js.JsValue("devtools-reload-page")
        val DEVTOOLS_RELOAD_PAGE: DEVTOOLS_RELOAD_PAGE

        @seskar.js.JsValue("did-attach-webview")
        val DID_ATTACH_WEBVIEW: DID_ATTACH_WEBVIEW

        @seskar.js.JsValue("did-change-theme-color")
        val DID_CHANGE_THEME_COLOR: DID_CHANGE_THEME_COLOR

        @seskar.js.JsValue("did-create-window")
        val DID_CREATE_WINDOW: DID_CREATE_WINDOW

        @seskar.js.JsValue("did-fail-load")
        val DID_FAIL_LOAD: DID_FAIL_LOAD

        @seskar.js.JsValue("did-fail-provisional-load")
        val DID_FAIL_PROVISIONAL_LOAD: DID_FAIL_PROVISIONAL_LOAD

        @seskar.js.JsValue("did-finish-load")
        val DID_FINISH_LOAD: DID_FINISH_LOAD

        @seskar.js.JsValue("did-frame-finish-load")
        val DID_FRAME_FINISH_LOAD: DID_FRAME_FINISH_LOAD

        @seskar.js.JsValue("did-frame-navigate")
        val DID_FRAME_NAVIGATE: DID_FRAME_NAVIGATE

        @seskar.js.JsValue("did-navigate")
        val DID_NAVIGATE: DID_NAVIGATE

        @seskar.js.JsValue("did-navigate-in-page")
        val DID_NAVIGATE_IN_PAGE: DID_NAVIGATE_IN_PAGE

        @seskar.js.JsValue("did-redirect-navigation")
        val DID_REDIRECT_NAVIGATION: DID_REDIRECT_NAVIGATION

        @seskar.js.JsValue("did-start-loading")
        val DID_START_LOADING: DID_START_LOADING

        @seskar.js.JsValue("did-start-navigation")
        val DID_START_NAVIGATION: DID_START_NAVIGATION

        @seskar.js.JsValue("did-stop-loading")
        val DID_STOP_LOADING: DID_STOP_LOADING

        @seskar.js.JsValue("dom-ready")
        val DOM_READY: DOM_READY

        @seskar.js.JsValue("enter-html-full-screen")
        val ENTER_HTML_FULL_SCREEN: ENTER_HTML_FULL_SCREEN

        @seskar.js.JsValue("focus")
        val FOCUS: FOCUS

        @seskar.js.JsValue("found-in-page")
        val FOUND_IN_PAGE: FOUND_IN_PAGE

        @seskar.js.JsValue("frame-created")
        val FRAME_CREATED: FRAME_CREATED

        @seskar.js.JsValue("input-event")
        val INPUT_EVENT: INPUT_EVENT

        @seskar.js.JsValue("ipc-message")
        val IPC_MESSAGE: IPC_MESSAGE

        @seskar.js.JsValue("ipc-message-sync")
        val IPC_MESSAGE_SYNC: IPC_MESSAGE_SYNC

        @seskar.js.JsValue("leave-html-full-screen")
        val LEAVE_HTML_FULL_SCREEN: LEAVE_HTML_FULL_SCREEN

        @seskar.js.JsValue("login")
        val LOGIN: LOGIN

        @seskar.js.JsValue("media-paused")
        val MEDIA_PAUSED: MEDIA_PAUSED

        @seskar.js.JsValue("media-started-playing")
        val MEDIA_STARTED_PLAYING: MEDIA_STARTED_PLAYING

        @seskar.js.JsValue("page-favicon-updated")
        val PAGE_FAVICON_UPDATED: PAGE_FAVICON_UPDATED

        @seskar.js.JsValue("page-title-updated")
        val PAGE_TITLE_UPDATED: PAGE_TITLE_UPDATED

        @seskar.js.JsValue("paint")
        val PAINT: PAINT

        @seskar.js.JsValue("plugin-crashed")
        val PLUGIN_CRASHED: PLUGIN_CRASHED

        @seskar.js.JsValue("preferred-size-changed")
        val PREFERRED_SIZE_CHANGED: PREFERRED_SIZE_CHANGED

        @seskar.js.JsValue("preload-error")
        val PRELOAD_ERROR: PRELOAD_ERROR

        @seskar.js.JsValue("render-process-gone")
        val RENDER_PROCESS_GONE: RENDER_PROCESS_GONE

        @seskar.js.JsValue("responsive")
        val RESPONSIVE: RESPONSIVE

        @seskar.js.JsValue("select-bluetooth-device")
        val SELECT_BLUETOOTH_DEVICE: SELECT_BLUETOOTH_DEVICE

        @seskar.js.JsValue("select-client-certificate")
        val SELECT_CLIENT_CERTIFICATE: SELECT_CLIENT_CERTIFICATE

        @seskar.js.JsValue("unresponsive")
        val UNRESPONSIVE: UNRESPONSIVE

        @seskar.js.JsValue("update-target-url")
        val UPDATE_TARGET_URL: UPDATE_TARGET_URL

        @seskar.js.JsValue("will-attach-webview")
        val WILL_ATTACH_WEBVIEW: WILL_ATTACH_WEBVIEW

        @seskar.js.JsValue("will-frame-navigate")
        val WILL_FRAME_NAVIGATE: WILL_FRAME_NAVIGATE

        @seskar.js.JsValue("will-navigate")
        val WILL_NAVIGATE: WILL_NAVIGATE

        @seskar.js.JsValue("will-prevent-unload")
        val WILL_PREVENT_UNLOAD: WILL_PREVENT_UNLOAD

        @seskar.js.JsValue("will-redirect")
        val WILL_REDIRECT: WILL_REDIRECT

        @seskar.js.JsValue("zoom-changed")
        val ZOOM_CHANGED: ZOOM_CHANGED

        @seskar.js.JsValue("audio-state-changed")
        fun audioStateChanged(): node.events.EventType<WebContents, js.array.JsTuple1<Event<WebContentsAudioStateChangedEventParams>>>

        @seskar.js.JsValue("before-input-event")
        fun beforeInputEvent(): node.events.EventType<WebContents, js.array.JsTuple2<Event<*>, Input>>

        @seskar.js.JsValue("blur")
        fun blur(): node.events.EventType<WebContents, js.array.JsTuple>

        @seskar.js.JsValue("certificate-error")
        fun certificateError(): node.events.EventType<WebContents, js.array.JsTuple6<Event<*>, String, String, Certificate, (isTrusted: Boolean) -> Unit, Boolean>>

        @seskar.js.JsValue("console-message")
        fun consoleMessage(): node.events.EventType<WebContents, js.array.JsTuple5<Event<*>, Double, String, Double, String>>

        @seskar.js.JsValue("content-bounds-updated")
        fun contentBoundsUpdated(): node.events.EventType<WebContents, js.array.JsTuple2<Event<*>, Rectangle>>

        @seskar.js.JsValue("context-menu")
        fun contextMenu(): node.events.EventType<WebContents, js.array.JsTuple2<Event<*>, ContextMenuParams>>

        @seskar.js.JsValue("cursor-changed")
        fun cursorChanged(): node.events.EventType<WebContents, js.array.JsTuple6<Event<*>, String, NativeImage, Double, Size, Point>>

        @seskar.js.JsValue("destroyed")
        fun destroyed(): node.events.EventType<WebContents, js.array.JsTuple>

        @seskar.js.JsValue("devtools-closed")
        fun devtoolsClosed(): node.events.EventType<WebContents, js.array.JsTuple>

        @seskar.js.JsValue("devtools-focused")
        fun devtoolsFocused(): node.events.EventType<WebContents, js.array.JsTuple>

        @seskar.js.JsValue("devtools-open-url")
        fun devtoolsOpenUrl(): node.events.EventType<WebContents, js.array.JsTuple2<Event<*>, String>>

        @seskar.js.JsValue("devtools-opened")
        fun devtoolsOpened(): node.events.EventType<WebContents, js.array.JsTuple>

        @seskar.js.JsValue("devtools-reload-page")
        fun devtoolsReloadPage(): node.events.EventType<WebContents, js.array.JsTuple>

        @seskar.js.JsValue("did-attach-webview")
        fun didAttachWebview(): node.events.EventType<WebContents, js.array.JsTuple2<Event<*>, WebContents>>

        @seskar.js.JsValue("did-change-theme-color")
        fun didChangeThemeColor(): node.events.EventType<WebContents, js.array.JsTuple2<Event<*>, String?>>

        @seskar.js.JsValue("did-create-window")
        fun didCreateWindow(): node.events.EventType<WebContents, js.array.JsTuple2<BrowserWindow, DidCreateWindowDetails>>

        @seskar.js.JsValue("did-fail-load")
        fun didFailLoad(): node.events.EventType<WebContents, js.array.JsTuple7<Event<*>, Double, String, String, Boolean, Double, Double>>

        @seskar.js.JsValue("did-fail-provisional-load")
        fun didFailProvisionalLoad(): node.events.EventType<WebContents, js.array.JsTuple7<Event<*>, Double, String, String, Boolean, Double, Double>>

        @seskar.js.JsValue("did-finish-load")
        fun didFinishLoad(): node.events.EventType<WebContents, js.array.JsTuple>

        @seskar.js.JsValue("did-frame-finish-load")
        fun didFrameFinishLoad(): node.events.EventType<WebContents, js.array.JsTuple4<Event<*>, Boolean, Double, Double>>

        @seskar.js.JsValue("did-frame-navigate")
        fun didFrameNavigate(): node.events.EventType<WebContents, js.array.JsTuple7<Event<*>, String, Double, String, Boolean, Double, Double>>

        @seskar.js.JsValue("did-navigate")
        fun didNavigate(): node.events.EventType<WebContents, js.array.JsTuple4<Event<*>, String, Double, String>>

        @seskar.js.JsValue("did-navigate-in-page")
        fun didNavigateInPage(): node.events.EventType<WebContents, js.array.JsTuple5<Event<*>, String, Boolean, Double, Double>>

        @seskar.js.JsValue("did-redirect-navigation")
        fun didRedirectNavigation(): node.events.EventType<WebContents, js.array.JsTuple6<Event<WebContentsDidRedirectNavigationEventParams>, String, Boolean, Boolean, Double, Double>>

        @seskar.js.JsValue("did-start-loading")
        fun didStartLoading(): node.events.EventType<WebContents, js.array.JsTuple>

        @seskar.js.JsValue("did-start-navigation")
        fun didStartNavigation(): node.events.EventType<WebContents, js.array.JsTuple6<Event<WebContentsDidStartNavigationEventParams>, String, Boolean, Boolean, Double, Double>>

        @seskar.js.JsValue("did-stop-loading")
        fun didStopLoading(): node.events.EventType<WebContents, js.array.JsTuple>

        @seskar.js.JsValue("dom-ready")
        fun domReady(): node.events.EventType<WebContents, js.array.JsTuple>

        @seskar.js.JsValue("enter-html-full-screen")
        fun enterHtmlFullScreen(): node.events.EventType<WebContents, js.array.JsTuple>

        @seskar.js.JsValue("focus")
        fun focus(): node.events.EventType<WebContents, js.array.JsTuple>

        @seskar.js.JsValue("found-in-page")
        fun foundInPage(): node.events.EventType<WebContents, js.array.JsTuple2<Event<*>, Result>>

        @seskar.js.JsValue("frame-created")
        fun frameCreated(): node.events.EventType<WebContents, js.array.JsTuple2<Event<*>, FrameCreatedDetails>>

        @seskar.js.JsValue("input-event")
        fun inputEvent(): node.events.EventType<WebContents, js.array.JsTuple2<Event<*>, InputEvent>>

        @seskar.js.JsValue("ipc-message")
        fun ipcMessage(): node.events.EventType<WebContents, js.array.JsTuple3<IpcMainEvent, String, js.array.ReadonlyArray<Any?>>>

        @seskar.js.JsValue("ipc-message-sync")
        fun ipcMessageSync(): node.events.EventType<WebContents, js.array.JsTuple3<IpcMainEvent, String, js.array.ReadonlyArray<Any?>>>

        @seskar.js.JsValue("leave-html-full-screen")
        fun leaveHtmlFullScreen(): node.events.EventType<WebContents, js.array.JsTuple>

        @seskar.js.JsValue("login")
        fun login(): node.events.EventType<WebContents, js.array.JsTuple4<Event<*>, AuthenticationResponseDetails, AuthInfo, (username: String? /* use undefined for default */, password: String? /* use undefined for default */) -> Unit>>

        @seskar.js.JsValue("media-paused")
        fun mediaPaused(): node.events.EventType<WebContents, js.array.JsTuple>

        @seskar.js.JsValue("media-started-playing")
        fun mediaStartedPlaying(): node.events.EventType<WebContents, js.array.JsTuple>

        @seskar.js.JsValue("page-favicon-updated")
        fun pageFaviconUpdated(): node.events.EventType<WebContents, js.array.JsTuple2<Event<*>, js.array.ReadonlyArray<String>>>

        @seskar.js.JsValue("page-title-updated")
        fun pageTitleUpdated(): node.events.EventType<WebContents, js.array.JsTuple3<Event<*>, String, Boolean>>

        @seskar.js.JsValue("paint")
        fun paint(): node.events.EventType<WebContents, js.array.JsTuple3<Event<*>, Rectangle, NativeImage>>

        @seskar.js.JsValue("plugin-crashed")
        fun pluginCrashed(): node.events.EventType<WebContents, js.array.JsTuple3<Event<*>, String, String>>

        @seskar.js.JsValue("preferred-size-changed")
        fun preferredSizeChanged(): node.events.EventType<WebContents, js.array.JsTuple2<Event<*>, Size>>

        @seskar.js.JsValue("preload-error")
        fun preloadError(): node.events.EventType<WebContents, js.array.JsTuple3<Event<*>, String, Throwable /* JsError */>>

        @seskar.js.JsValue("render-process-gone")
        fun renderProcessGone(): node.events.EventType<WebContents, js.array.JsTuple2<Event<*>, RenderProcessGoneDetails>>

        @seskar.js.JsValue("responsive")
        fun responsive(): node.events.EventType<WebContents, js.array.JsTuple>

        @seskar.js.JsValue("select-bluetooth-device")
        fun selectBluetoothDevice(): node.events.EventType<WebContents, js.array.JsTuple3<Event<*>, js.array.ReadonlyArray<BluetoothDevice>, (deviceId: String) -> Unit>>

        @seskar.js.JsValue("select-client-certificate")
        fun selectClientCertificate(): node.events.EventType<WebContents, js.array.JsTuple4<Event<*>, String, js.array.ReadonlyArray<Certificate>, (certificate: Certificate) -> Unit>>

        @seskar.js.JsValue("unresponsive")
        fun unresponsive(): node.events.EventType<WebContents, js.array.JsTuple>

        @seskar.js.JsValue("update-target-url")
        fun updateTargetUrl(): node.events.EventType<WebContents, js.array.JsTuple2<Event<*>, String>>

        @seskar.js.JsValue("will-attach-webview")
        fun willAttachWebview(): node.events.EventType<WebContents, js.array.JsTuple3<Event<*>, WebPreferences, js.objects.ReadonlyRecord<String, String>>>

        @seskar.js.JsValue("will-frame-navigate")
        fun willFrameNavigate(): node.events.EventType<WebContents, js.array.JsTuple1<Event<WebContentsWillFrameNavigateEventParams>>>

        @seskar.js.JsValue("will-navigate")
        fun willNavigate(): node.events.EventType<WebContents, js.array.JsTuple6<Event<WebContentsWillNavigateEventParams>, String, Boolean, Boolean, Double, Double>>

        @seskar.js.JsValue("will-prevent-unload")
        fun willPreventUnload(): node.events.EventType<WebContents, js.array.JsTuple1<Event<*>>>

        @seskar.js.JsValue("will-redirect")
        fun willRedirect(): node.events.EventType<WebContents, js.array.JsTuple6<Event<WebContentsWillRedirectEventParams>, String, Boolean, Boolean, Double, Double>>

        @seskar.js.JsValue("zoom-changed")
        fun zoomChanged(): node.events.EventType<WebContents, js.array.JsTuple2<Event<*>, (WebContentsAddListenerListenerZoomDirection)>>
    }
}
