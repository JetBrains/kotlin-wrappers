// Generated by Karakum - do not modify it manually!

package electron.core

import js.date.Date


sealed external interface AutoUpdaterEvent {
    sealed interface BEFORE_QUIT_FOR_UPDATE : node.events.LegacyEventType
    sealed interface CHECKING_FOR_UPDATE : node.events.LegacyEventType
    sealed interface ERROR : node.events.LegacyEventType
    sealed interface UPDATE_AVAILABLE : node.events.LegacyEventType
    sealed interface UPDATE_DOWNLOADED : node.events.LegacyEventType
    sealed interface UPDATE_NOT_AVAILABLE : node.events.LegacyEventType

    companion object {
        @seskar.js.JsValue("before-quit-for-update")
        val BEFORE_QUIT_FOR_UPDATE: BEFORE_QUIT_FOR_UPDATE

        @seskar.js.JsValue("checking-for-update")
        val CHECKING_FOR_UPDATE: CHECKING_FOR_UPDATE

        @seskar.js.JsValue("error")
        val ERROR: ERROR

        @seskar.js.JsValue("update-available")
        val UPDATE_AVAILABLE: UPDATE_AVAILABLE

        @seskar.js.JsValue("update-downloaded")
        val UPDATE_DOWNLOADED: UPDATE_DOWNLOADED

        @seskar.js.JsValue("update-not-available")
        val UPDATE_NOT_AVAILABLE: UPDATE_NOT_AVAILABLE

        @seskar.js.JsValue("before-quit-for-update")
        fun beforeQuitForUpdate(): node.events.EventType<AutoUpdater, js.array.JsTuple>

        @seskar.js.JsValue("checking-for-update")
        fun checkingForUpdate(): node.events.EventType<AutoUpdater, js.array.JsTuple>

        @seskar.js.JsValue("error")
        fun error(): node.events.EventType<AutoUpdater, js.array.JsTuple1<Throwable /* JsError */>>

        @seskar.js.JsValue("update-available")
        fun updateAvailable(): node.events.EventType<AutoUpdater, js.array.JsTuple>

        @seskar.js.JsValue("update-downloaded")
        fun updateDownloaded(): node.events.EventType<AutoUpdater, js.array.JsTuple5<Event<*>, String, String, Date, String>>

        @seskar.js.JsValue("update-not-available")
        fun updateNotAvailable(): node.events.EventType<AutoUpdater, js.array.JsTuple>
    }
}
