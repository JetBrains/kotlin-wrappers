// Generated by Karakum - do not modify it manually!

package electron.core


sealed external interface NotificationEvent {
    sealed interface ACTION : node.events.LegacyEventType
    sealed interface CLICK : node.events.LegacyEventType
    sealed interface CLOSE : node.events.LegacyEventType
    sealed interface FAILED : node.events.LegacyEventType
    sealed interface REPLY : node.events.LegacyEventType
    sealed interface SHOW : node.events.LegacyEventType

    companion object {
        @seskar.js.JsValue("action")
        val ACTION: ACTION

        @seskar.js.JsValue("click")
        val CLICK: CLICK

        @seskar.js.JsValue("close")
        val CLOSE: CLOSE

        @seskar.js.JsValue("failed")
        val FAILED: FAILED

        @seskar.js.JsValue("reply")
        val REPLY: REPLY

        @seskar.js.JsValue("show")
        val SHOW: SHOW

        @seskar.js.JsValue("action")
        fun action(): node.events.EventType<Notification, js.array.JsTuple2<Event<*>, Double>>

        @seskar.js.JsValue("click")
        fun click(): node.events.EventType<Notification, js.array.JsTuple1<Event<*>>>

        @seskar.js.JsValue("close")
        fun close(): node.events.EventType<Notification, js.array.JsTuple1<Event<*>>>

        @seskar.js.JsValue("failed")
        fun failed(): node.events.EventType<Notification, js.array.JsTuple2<Event<*>, String>>

        @seskar.js.JsValue("reply")
        fun reply(): node.events.EventType<Notification, js.array.JsTuple2<Event<*>, String>>

        @seskar.js.JsValue("show")
        fun show(): node.events.EventType<Notification, js.array.JsTuple1<Event<*>>>
    }
}
