// Generated by Karakum - do not modify it manually!

package electron.core


sealed external interface BrowserWindowEvent {
    sealed interface ALWAYS_ON_TOP_CHANGED : node.events.LegacyEventType
    sealed interface APP_COMMAND : node.events.LegacyEventType
    sealed interface BLUR : node.events.LegacyEventType
    sealed interface CLOSE : node.events.LegacyEventType
    sealed interface CLOSED : node.events.LegacyEventType
    sealed interface ENTER_FULL_SCREEN : node.events.LegacyEventType
    sealed interface ENTER_HTML_FULL_SCREEN : node.events.LegacyEventType
    sealed interface FOCUS : node.events.LegacyEventType
    sealed interface HIDE : node.events.LegacyEventType
    sealed interface LEAVE_FULL_SCREEN : node.events.LegacyEventType
    sealed interface LEAVE_HTML_FULL_SCREEN : node.events.LegacyEventType
    sealed interface MAXIMIZE : node.events.LegacyEventType
    sealed interface MINIMIZE : node.events.LegacyEventType
    sealed interface MOVE : node.events.LegacyEventType
    sealed interface MOVED : node.events.LegacyEventType
    sealed interface NEW_WINDOW_FOR_TAB : node.events.LegacyEventType
    sealed interface PAGE_TITLE_UPDATED : node.events.LegacyEventType
    sealed interface READY_TO_SHOW : node.events.LegacyEventType
    sealed interface RESIZE : node.events.LegacyEventType
    sealed interface RESIZED : node.events.LegacyEventType
    sealed interface RESPONSIVE : node.events.LegacyEventType
    sealed interface RESTORE : node.events.LegacyEventType
    sealed interface ROTATE_GESTURE : node.events.LegacyEventType
    sealed interface SESSION_END : node.events.LegacyEventType
    sealed interface SHEET_BEGIN : node.events.LegacyEventType
    sealed interface SHEET_END : node.events.LegacyEventType
    sealed interface SHOW : node.events.LegacyEventType
    sealed interface SWIPE : node.events.LegacyEventType
    sealed interface SYSTEM_CONTEXT_MENU : node.events.LegacyEventType
    sealed interface UNMAXIMIZE : node.events.LegacyEventType
    sealed interface UNRESPONSIVE : node.events.LegacyEventType
    sealed interface WILL_MOVE : node.events.LegacyEventType
    sealed interface WILL_RESIZE : node.events.LegacyEventType

    companion object {
        @seskar.js.JsValue("always-on-top-changed")
        val ALWAYS_ON_TOP_CHANGED: ALWAYS_ON_TOP_CHANGED

        @seskar.js.JsValue("app-command")
        val APP_COMMAND: APP_COMMAND

        @seskar.js.JsValue("blur")
        val BLUR: BLUR

        @seskar.js.JsValue("close")
        val CLOSE: CLOSE

        @seskar.js.JsValue("closed")
        val CLOSED: CLOSED

        @seskar.js.JsValue("enter-full-screen")
        val ENTER_FULL_SCREEN: ENTER_FULL_SCREEN

        @seskar.js.JsValue("enter-html-full-screen")
        val ENTER_HTML_FULL_SCREEN: ENTER_HTML_FULL_SCREEN

        @seskar.js.JsValue("focus")
        val FOCUS: FOCUS

        @seskar.js.JsValue("hide")
        val HIDE: HIDE

        @seskar.js.JsValue("leave-full-screen")
        val LEAVE_FULL_SCREEN: LEAVE_FULL_SCREEN

        @seskar.js.JsValue("leave-html-full-screen")
        val LEAVE_HTML_FULL_SCREEN: LEAVE_HTML_FULL_SCREEN

        @seskar.js.JsValue("maximize")
        val MAXIMIZE: MAXIMIZE

        @seskar.js.JsValue("minimize")
        val MINIMIZE: MINIMIZE

        @seskar.js.JsValue("move")
        val MOVE: MOVE

        @seskar.js.JsValue("moved")
        val MOVED: MOVED

        @seskar.js.JsValue("new-window-for-tab")
        val NEW_WINDOW_FOR_TAB: NEW_WINDOW_FOR_TAB

        @seskar.js.JsValue("page-title-updated")
        val PAGE_TITLE_UPDATED: PAGE_TITLE_UPDATED

        @seskar.js.JsValue("ready-to-show")
        val READY_TO_SHOW: READY_TO_SHOW

        @seskar.js.JsValue("resize")
        val RESIZE: RESIZE

        @seskar.js.JsValue("resized")
        val RESIZED: RESIZED

        @seskar.js.JsValue("responsive")
        val RESPONSIVE: RESPONSIVE

        @seskar.js.JsValue("restore")
        val RESTORE: RESTORE

        @seskar.js.JsValue("rotate-gesture")
        val ROTATE_GESTURE: ROTATE_GESTURE

        @seskar.js.JsValue("session-end")
        val SESSION_END: SESSION_END

        @seskar.js.JsValue("sheet-begin")
        val SHEET_BEGIN: SHEET_BEGIN

        @seskar.js.JsValue("sheet-end")
        val SHEET_END: SHEET_END

        @seskar.js.JsValue("show")
        val SHOW: SHOW

        @seskar.js.JsValue("swipe")
        val SWIPE: SWIPE

        @seskar.js.JsValue("system-context-menu")
        val SYSTEM_CONTEXT_MENU: SYSTEM_CONTEXT_MENU

        @seskar.js.JsValue("unmaximize")
        val UNMAXIMIZE: UNMAXIMIZE

        @seskar.js.JsValue("unresponsive")
        val UNRESPONSIVE: UNRESPONSIVE

        @seskar.js.JsValue("will-move")
        val WILL_MOVE: WILL_MOVE

        @seskar.js.JsValue("will-resize")
        val WILL_RESIZE: WILL_RESIZE

        @seskar.js.JsValue("always-on-top-changed")
        fun alwaysOnTopChanged(): node.events.EventType<BrowserWindow, js.array.JsTuple2<Event<*>, Boolean>>

        @seskar.js.JsValue("app-command")
        fun appCommand(): node.events.EventType<BrowserWindow, js.array.JsTuple2<Event<*>, String>>

        @seskar.js.JsValue("blur")
        fun blur(): node.events.EventType<BrowserWindow, js.array.JsTuple>

        @seskar.js.JsValue("close")
        fun close(): node.events.EventType<BrowserWindow, js.array.JsTuple1<Event<*>>>

        @seskar.js.JsValue("closed")
        fun closed(): node.events.EventType<BrowserWindow, js.array.JsTuple>

        @seskar.js.JsValue("enter-full-screen")
        fun enterFullScreen(): node.events.EventType<BrowserWindow, js.array.JsTuple>

        @seskar.js.JsValue("enter-html-full-screen")
        fun enterHtmlFullScreen(): node.events.EventType<BrowserWindow, js.array.JsTuple>

        @seskar.js.JsValue("focus")
        fun focus(): node.events.EventType<BrowserWindow, js.array.JsTuple>

        @seskar.js.JsValue("hide")
        fun hide(): node.events.EventType<BrowserWindow, js.array.JsTuple>

        @seskar.js.JsValue("leave-full-screen")
        fun leaveFullScreen(): node.events.EventType<BrowserWindow, js.array.JsTuple>

        @seskar.js.JsValue("leave-html-full-screen")
        fun leaveHtmlFullScreen(): node.events.EventType<BrowserWindow, js.array.JsTuple>

        @seskar.js.JsValue("maximize")
        fun maximize(): node.events.EventType<BrowserWindow, js.array.JsTuple>

        @seskar.js.JsValue("minimize")
        fun minimize(): node.events.EventType<BrowserWindow, js.array.JsTuple>

        @seskar.js.JsValue("move")
        fun move(): node.events.EventType<BrowserWindow, js.array.JsTuple>

        @seskar.js.JsValue("moved")
        fun moved(): node.events.EventType<BrowserWindow, js.array.JsTuple>

        @seskar.js.JsValue("new-window-for-tab")
        fun newWindowForTab(): node.events.EventType<BrowserWindow, js.array.JsTuple>

        @seskar.js.JsValue("page-title-updated")
        fun pageTitleUpdated(): node.events.EventType<BrowserWindow, js.array.JsTuple3<Event<*>, String, Boolean>>

        @seskar.js.JsValue("ready-to-show")
        fun readyToShow(): node.events.EventType<BrowserWindow, js.array.JsTuple>

        @seskar.js.JsValue("resize")
        fun resize(): node.events.EventType<BrowserWindow, js.array.JsTuple>

        @seskar.js.JsValue("resized")
        fun resized(): node.events.EventType<BrowserWindow, js.array.JsTuple>

        @seskar.js.JsValue("responsive")
        fun responsive(): node.events.EventType<BrowserWindow, js.array.JsTuple>

        @seskar.js.JsValue("restore")
        fun restore(): node.events.EventType<BrowserWindow, js.array.JsTuple>

        @seskar.js.JsValue("rotate-gesture")
        fun rotateGesture(): node.events.EventType<BrowserWindow, js.array.JsTuple2<Event<*>, Double>>

        @seskar.js.JsValue("session-end")
        fun sessionEnd(): node.events.EventType<BrowserWindow, js.array.JsTuple>

        @seskar.js.JsValue("sheet-begin")
        fun sheetBegin(): node.events.EventType<BrowserWindow, js.array.JsTuple>

        @seskar.js.JsValue("sheet-end")
        fun sheetEnd(): node.events.EventType<BrowserWindow, js.array.JsTuple>

        @seskar.js.JsValue("show")
        fun show(): node.events.EventType<BrowserWindow, js.array.JsTuple>

        @seskar.js.JsValue("swipe")
        fun swipe(): node.events.EventType<BrowserWindow, js.array.JsTuple2<Event<*>, String>>

        @seskar.js.JsValue("system-context-menu")
        fun systemContextMenu(): node.events.EventType<BrowserWindow, js.array.JsTuple2<Event<*>, Point>>

        @seskar.js.JsValue("unmaximize")
        fun unmaximize(): node.events.EventType<BrowserWindow, js.array.JsTuple>

        @seskar.js.JsValue("unresponsive")
        fun unresponsive(): node.events.EventType<BrowserWindow, js.array.JsTuple>

        @seskar.js.JsValue("will-move")
        fun willMove(): node.events.EventType<BrowserWindow, js.array.JsTuple2<Event<*>, Rectangle>>

        @seskar.js.JsValue("will-resize")
        fun willResize(): node.events.EventType<BrowserWindow, js.array.JsTuple3<Event<*>, Rectangle, WillResizeDetails>>
    }
}
