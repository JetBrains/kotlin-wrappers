// Generated by Karakum - do not modify it manually!

package electron.core

sealed external interface InputEventType {
    companion object {
        @seskar.js.JsValue("undefined")
        val undefined: InputEventType

        @seskar.js.JsValue("mouseDown")
        val mouseDown: InputEventType

        @seskar.js.JsValue("mouseUp")
        val mouseUp: InputEventType

        @seskar.js.JsValue("mouseMove")
        val mouseMove: InputEventType

        @seskar.js.JsValue("mouseEnter")
        val mouseEnter: InputEventType

        @seskar.js.JsValue("mouseLeave")
        val mouseLeave: InputEventType

        @seskar.js.JsValue("contextMenu")
        val contextMenu: InputEventType

        @seskar.js.JsValue("mouseWheel")
        val mouseWheel: InputEventType

        @seskar.js.JsValue("rawKeyDown")
        val rawKeyDown: InputEventType

        @seskar.js.JsValue("keyDown")
        val keyDown: InputEventType

        @seskar.js.JsValue("keyUp")
        val keyUp: InputEventType

        @seskar.js.JsValue("char")
        val char: InputEventType

        @seskar.js.JsValue("gestureScrollBegin")
        val gestureScrollBegin: InputEventType

        @seskar.js.JsValue("gestureScrollEnd")
        val gestureScrollEnd: InputEventType

        @seskar.js.JsValue("gestureScrollUpdate")
        val gestureScrollUpdate: InputEventType

        @seskar.js.JsValue("gestureFlingStart")
        val gestureFlingStart: InputEventType

        @seskar.js.JsValue("gestureFlingCancel")
        val gestureFlingCancel: InputEventType

        @seskar.js.JsValue("gesturePinchBegin")
        val gesturePinchBegin: InputEventType

        @seskar.js.JsValue("gesturePinchEnd")
        val gesturePinchEnd: InputEventType

        @seskar.js.JsValue("gesturePinchUpdate")
        val gesturePinchUpdate: InputEventType

        @seskar.js.JsValue("gestureTapDown")
        val gestureTapDown: InputEventType

        @seskar.js.JsValue("gestureShowPress")
        val gestureShowPress: InputEventType

        @seskar.js.JsValue("gestureTap")
        val gestureTap: InputEventType

        @seskar.js.JsValue("gestureTapCancel")
        val gestureTapCancel: InputEventType

        @seskar.js.JsValue("gestureShortPress")
        val gestureShortPress: InputEventType

        @seskar.js.JsValue("gestureLongPress")
        val gestureLongPress: InputEventType

        @seskar.js.JsValue("gestureLongTap")
        val gestureLongTap: InputEventType

        @seskar.js.JsValue("gestureTwoFingerTap")
        val gestureTwoFingerTap: InputEventType

        @seskar.js.JsValue("gestureTapUnconfirmed")
        val gestureTapUnconfirmed: InputEventType

        @seskar.js.JsValue("gestureDoubleTap")
        val gestureDoubleTap: InputEventType

        @seskar.js.JsValue("touchStart")
        val touchStart: InputEventType

        @seskar.js.JsValue("touchMove")
        val touchMove: InputEventType

        @seskar.js.JsValue("touchEnd")
        val touchEnd: InputEventType

        @seskar.js.JsValue("touchCancel")
        val touchCancel: InputEventType

        @seskar.js.JsValue("touchScrollStarted")
        val touchScrollStarted: InputEventType

        @seskar.js.JsValue("pointerDown")
        val pointerDown: InputEventType

        @seskar.js.JsValue("pointerUp")
        val pointerUp: InputEventType

        @seskar.js.JsValue("pointerMove")
        val pointerMove: InputEventType

        @seskar.js.JsValue("pointerRawUpdate")
        val pointerRawUpdate: InputEventType

        @seskar.js.JsValue("pointerCancel")
        val pointerCancel: InputEventType

        @seskar.js.JsValue("pointerCausedUaAction")
        val pointerCausedUaAction: InputEventType
    }
}
