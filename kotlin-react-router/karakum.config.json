{
    "input": "<nodeModules>/react-router/dist/**/*.d.ts",
    "ignoreInput": [
        "**/@remix-run/router/**",
        "**/@types/prop-types/**",
        "**/@types/react/**",
        "**/@types/scheduler/**",
        "**/csstype/**",

        "**/react-router/dist/lib/use-sync-external-store-shim/**"
    ],
    "output": "src/jsMain/generated",
    "ignoreOutput": [
        "**/Navigate.kt",
        "**/NavigateProps.kt"
    ],
    "libraryName": "react-router",
    "libraryNameOutputPrefix": true,
    "granularity": "top-level",
    "moduleNameMapper": {
        ".*": ""
    },
    "packageNameMapper": {
        ".*/(.*).kt": "$1.kt"
    },
    "importInjector": {
        "_renderMatches.kt": [
            "remix.run.router.RouterState"
        ],
        "context.kt": [
            "remix.run.router.RouterState",
            "remix.run.router.TrackedPromise"
        ],
        "createMemoryRouter.kt": [
            "remix.run.router.Router as RemixRouter"
        ],
        "CreateMemoryRouterOpts.kt": [
            "remix.run.router.HydrationState",
            "remix.run.router.InitialEntry"
        ],
        "DataRouterContextObject.kt": [
            "remix.run.router.Router",
            "remix.run.router.StaticHandlerContext"
        ],
        "IndexRouteObject.kt": [
            "remix.run.router.LoaderFunction",
            "remix.run.router.ActionFunction",
            "remix.run.router.ShouldRevalidateFunction"
        ],
        "IndexRouteProps.kt": [
            "remix.run.router.LoaderFunction",
            "remix.run.router.ActionFunction",
            "remix.run.router.ShouldRevalidateFunction"
        ],
        "LocationContextObject.kt": [
            "remix.run.router.Location",
            "remix.run.router.Action as NavigationType"
        ],
        "MemoryRouterProps.kt": [
            "remix.run.router.InitialEntry"
        ],
        "NavigateFunction.kt": [
            "remix.run.router.To"
        ],
        "Navigator.kt": [
            "remix.run.router.To",
            "remix.run.router.Path"
        ],
        "NonIndexRouteObject.kt": [
            "remix.run.router.LoaderFunction",
            "remix.run.router.ActionFunction",
            "remix.run.router.ShouldRevalidateFunction"
        ],
        "PathRouteProps.kt": [
            "remix.run.router.LoaderFunction",
            "remix.run.router.ActionFunction",
            "remix.run.router.ShouldRevalidateFunction"
        ],
        "RenderErrorBoundaryProps.kt": [
            "remix.run.router.Location"
        ],
        "RenderErrorBoundaryState.kt": [
            "remix.run.router.Location"
        ],
        "RouteMatch.kt": [
            "remix.run.router.AgnosticRouteMatch"
        ],
        "RouterProps.kt": [
            "remix.run.router.Action as NavigationType"
        ],
        "RouterProviderProps": [
            "remix.run.router.Router as RemixRouter"
        ],
        "UseMatchesResultItem.kt": [
            "remix.run.router.Params"
        ],
        "UseRevalidatorResult.kt": [
            "remix.run.router.RevalidationState"
        ],
        "useBlocker.kt": [
            "remix.run.router.Blocker",
            "remix.run.router.BlockerFunction"
        ],
        "useHref.kt": [
            "remix.run.router.To"
        ],
        "useLocation.kt": [
            "remix.run.router.Location"
        ],
        "useNavigation.kt": [
            "remix.run.router.Navigation"
        ],
        "useNavigationType.kt": [
            "remix.run.router.Action as NavigationType"
        ],
        "useMatch.kt": [
            "remix.run.router.PathMatch",
            "remix.run.router.PathPattern"
        ],
        "useParams.kt": [
            "remix.run.router.Params"
        ],
        "useResolvedPath.kt": [
            "remix.run.router.To",
            "remix.run.router.Path"
        ],
        "useRoutes.kt": [
            "remix.run.router.Location"
        ]
    }
}
