// Generated by Karakum - do not modify it manually!

@file:JsModule("node:inspector")

package node.inspector

import js.disposable.Disposable

/**
 * Activate inspector on host and port. Equivalent to `node --inspect=[[host:]port]`, but can be done programmatically after node has
 * started.
 *
 * If wait is `true`, will block until a client has connected to the inspect port
 * and flow control has been passed to the debugger client.
 *
 * See the [security warning](https://nodejs.org/docs/latest-v24.x/api/cli.html#warning-binding-inspector-to-a-public-ipport-combination-is-insecure)
 * regarding the `host` parameter usage.
 * @param port Port to listen on for inspector connections. Defaults to what was specified on the CLI.
 * @param host Host to listen on for inspector connections. Defaults to what was specified on the CLI.
 * @param wait Block until a client has connected. Defaults to what was specified on the CLI.
 * @returns Disposable that calls `inspector.close()`.
 */
external fun open(
    port: Number = definedExternally,
    host: String = definedExternally,
    wait: Boolean = definedExternally,
): Disposable
