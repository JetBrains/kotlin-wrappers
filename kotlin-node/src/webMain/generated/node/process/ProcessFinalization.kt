// Generated by Karakum - do not modify it manually!

package node.process

sealed external interface ProcessFinalization {
    /**
     * This function registers a callback to be called when the process emits the `exit` event if the `ref` object was not garbage collected.
     * If the object `ref` was garbage collected before the `exit` event is emitted, the callback will be removed from the finalization registry, and it will not be called on process exit.
     *
     * Inside the callback you can release the resources allocated by the `ref` object.
     * Be aware that all limitations applied to the `beforeExit` event are also applied to the callback function,
     * this means that there is a possibility that the callback will not be called under special circumstances.
     *
     * The idea of ​​this function is to help you free up resources when the starts process exiting, but also let the object be garbage collected if it is no longer being used.
     * @param ref The reference to the resource that is being tracked.
     * @param callback The callback function to be called when the resource is finalized.
     * @since v22.5.0
     * @experimental
     */
    fun <T : Any> register(ref: T, callback: (ref: T, event: String /* "exit" */) -> Unit)

    /**
     * This function behaves exactly like the `register`, except that the callback will be called when the process emits the `beforeExit` event if `ref` object was not garbage collected.
     *
     * Be aware that all limitations applied to the `beforeExit` event are also applied to the callback function, this means that there is a possibility that the callback will not be called under special circumstances.
     * @param ref The reference to the resource that is being tracked.
     * @param callback The callback function to be called when the resource is finalized.
     * @since v22.5.0
     * @experimental
     */
    fun <T : Any> registerBeforeExit(ref: T, callback: (ref: T, event: String /* "beforeExit" */) -> Unit)

    /**
     * This function remove the register of the object from the finalization registry, so the callback will not be called anymore.
     * @param ref The reference to the resource that was registered previously.
     * @since v22.5.0
     * @experimental
     */
    fun unregister(ref: Any)
}
