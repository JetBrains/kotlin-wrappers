// Generated by Karakum - do not modify it manually!

package node.sqlite

sealed external interface AggregateOptions<T : SQLInputValue /* default is SQLInputValue */> : FunctionOptions {
    /**
     * The identity value for the aggregation function. This value is used when the aggregation
     * function is initialized. When a `Function` is passed the identity will be its return value.
     */
    var start: Any // T | (() => T)

    /**
     * The function to call for each row in the aggregation. The
     * function receives the current state and the row value. The return value of
     * this function should be the new state.
     */
    var step: Function<T> // (accumulator: T, ...args: SQLOutputValue[]) => T

    /**
     * The function to call to get the result of the
     * aggregation. The function receives the final state and should return the
     * result of the aggregation.
     */
    var result: ((accumulator: T) -> SQLInputValue)?

    /**
     * When this function is provided, the `aggregate` method will work as a window function.
     * The function receives the current state and the dropped row value. The return value of this function should be the
     * new state.
     */
    var inverse: (Function<T> /* (accumulator: T, ...args: SQLOutputValue[]) => T */)?
}
