// Generated by Karakum - do not modify it manually!

package node.v8

/**
 * Key events in the lifetime of a promise have been categorized into four areas: creation of a promise, before/after a continuation handler is called or
 * around an await, and when the promise resolves or rejects.
 *
 * Because promises are asynchronous resources whose lifecycle is tracked via the promise hooks mechanism, the `init()`, `before()`, `after()`, and
 * `settled()` callbacks must not be async functions as they create more promises which would produce an infinite loop.
 * @since v17.1.0, v16.14.0
 */
sealed external interface HookCallbacks {
    var init: Init?
    var before: Before?
    var after: After?
    var settled: Settled?
}
