// Generated by Karakum - do not modify it manually!

@file:JsModule("node:sqlite")

package node.sqlite

/**
 * This class represents a single [connection](https://www.sqlite.org/c3ref/sqlite3.html) to a SQLite database. All APIs
 * exposed by this class execute synchronously.
 * @since v22.5.0
 */
external class DatabaseSync {
    /**
     * Constructs a new `DatabaseSync` instance.
     * @param location The location of the database.
     * A SQLite database can be stored in a file or completely [in memory](https://www.sqlite.org/inmemorydb.html).
     * To use a file-backed database, the location should be a file path.
     * To use an in-memory database, the location should be the special name `':memory:'`.
     * @param options Configuration options for the database connection.
     */
    constructor (location: String, options: DatabaseSyncOptions = definedExternally)

    /**
     * Closes the database connection. An exception is thrown if the database is not
     * open. This method is a wrapper around [`sqlite3_close_v2()`](https://www.sqlite.org/c3ref/close.html).
     * @since v22.5.0
     */
    fun close(): Unit

    /**
     * This method allows one or more SQL statements to be executed without returning
     * any results. This method is useful when executing SQL statements read from a
     * file. This method is a wrapper around [`sqlite3_exec()`](https://www.sqlite.org/c3ref/exec.html).
     * @since v22.5.0
     * @param sql A SQL string to execute.
     */
    fun exec(sql: String): Unit

    /**
     * Opens the database specified in the `location` argument of the `DatabaseSync`constructor. This method should only be used when the database is not opened via
     * the constructor. An exception is thrown if the database is already open.
     * @since v22.5.0
     */
    fun open(): Unit

    /**
     * Compiles a SQL statement into a [prepared statement](https://www.sqlite.org/c3ref/stmt.html). This method is a wrapper
     * around [`sqlite3_prepare_v2()`](https://www.sqlite.org/c3ref/prepare.html).
     * @since v22.5.0
     * @param sql A SQL string to compile to a prepared statement.
     * @return The prepared statement.
     */
    fun prepare(sql: String): StatementSync
}
