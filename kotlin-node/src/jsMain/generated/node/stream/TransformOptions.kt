// Generated by Karakum - do not modify it manually!

package node.stream

@kotlinx.js.JsPlainObject
external interface TransformOptions : DuplexOptions {
    override val construct: ((/* this: Transform, */ callback: (error: Throwable /* JsError */? /* use undefined for default */) -> Unit) -> Unit)?
    override val read: ((/* this: Transform, */ size: Number) -> Unit)?
    override val write: ((/* this: Transform, */ chunk: Any?, encoding: node.buffer.BufferEncoding, callback: (error: Throwable /* JsError */? /* use undefined for default */) -> Unit) -> Unit)?
    override val writev: ((/* this: Transform, */ chunks: Array<WritableOptionsWritevChunksItem>, callback: (error: Throwable /* JsError */? /* use undefined for default */) -> Unit) -> Unit)?
    override val final: ((/* this: Transform, */ callback: (error: Throwable /* JsError */? /* use undefined for default */) -> Unit) -> Unit)?
    override val destroy: ((/* this: Transform, */ error: Throwable /* JsError */?, callback: (error: Throwable /* JsError */? /* use undefined for default */) -> Unit) -> Unit)?
    val transform: ((/* this: Transform, */ chunk: Any?, encoding: node.buffer.BufferEncoding, callback: TransformCallback) -> Unit)?
    val flush: ((/* this: Transform, */ callback: TransformCallback) -> Unit)?
}
