// Generated by Karakum - do not modify it manually!

package node.stream

@kotlinx.js.JsPlainObject
sealed external interface DuplexOptions : ReadableOptions, WritableOptions {
    var allowHalfOpen: Boolean?
    var readableObjectMode: Boolean?
    var writableObjectMode: Boolean?
    var readableHighWaterMark: Double?
    var writableHighWaterMark: Double?
    var writableCorked: Double?
    override val construct: ((/* this: Duplex, */ callback: (error: Throwable /* JsError */? /* use undefined for default */) -> Unit) -> Unit)?
    override val read: ((/* this: Duplex, */ size: Number) -> Unit)?
    override val write: ((/* this: Duplex, */ chunk: Any?, encoding: node.buffer.BufferEncoding, callback: (error: Throwable /* JsError */? /* use undefined for default */) -> Unit) -> Unit)?
    override val writev: ((/* this: Duplex, */ chunks: Array<WritableOptionsWritevChunksItem>, callback: (error: Throwable /* JsError */? /* use undefined for default */) -> Unit) -> Unit)?
    override val final: ((/* this: Duplex, */ callback: (error: Throwable /* JsError */? /* use undefined for default */) -> Unit) -> Unit)?
    override val destroy: ((/* this: Duplex, */ error: Throwable /* JsError */?, callback: (error: Throwable /* JsError */? /* use undefined for default */) -> Unit) -> Unit)?
}
