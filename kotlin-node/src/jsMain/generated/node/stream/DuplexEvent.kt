// Generated by Karakum - do not modify it manually!

package node.stream


@seskar.js.JsVirtual
sealed external interface DuplexEvent {
    sealed interface CLOSE : node.events.LegacyEventType
    sealed interface DATA : node.events.LegacyEventType
    sealed interface DRAIN : node.events.LegacyEventType
    sealed interface END : node.events.LegacyEventType
    sealed interface ERROR : node.events.LegacyEventType
    sealed interface FINISH : node.events.LegacyEventType
    sealed interface PAUSE : node.events.LegacyEventType
    sealed interface PIPE : node.events.LegacyEventType
    sealed interface READABLE : node.events.LegacyEventType
    sealed interface RESUME : node.events.LegacyEventType
    sealed interface UNPIPE : node.events.LegacyEventType

    companion object {
        @seskar.js.JsValue("close")
        val CLOSE: CLOSE

        @seskar.js.JsValue("data")
        val DATA: DATA

        @seskar.js.JsValue("drain")
        val DRAIN: DRAIN

        @seskar.js.JsValue("end")
        val END: END

        @seskar.js.JsValue("error")
        val ERROR: ERROR

        @seskar.js.JsValue("finish")
        val FINISH: FINISH

        @seskar.js.JsValue("pause")
        val PAUSE: PAUSE

        @seskar.js.JsValue("pipe")
        val PIPE: PIPE

        @seskar.js.JsValue("readable")
        val READABLE: READABLE

        @seskar.js.JsValue("resume")
        val RESUME: RESUME

        @seskar.js.JsValue("unpipe")
        val UNPIPE: UNPIPE

        @seskar.js.JsValue("close")
        fun close(): node.events.EventType<Duplex, js.array.JsTuple>

        @seskar.js.JsValue("data")
        fun data(): node.events.EventType<Duplex, js.array.JsTuple1<Any?>>

        @seskar.js.JsValue("drain")
        fun drain(): node.events.EventType<Duplex, js.array.JsTuple>

        @seskar.js.JsValue("end")
        fun end(): node.events.EventType<Duplex, js.array.JsTuple>

        @seskar.js.JsValue("error")
        fun error(): node.events.EventType<Duplex, js.array.JsTuple1<Throwable /* JsError */>>

        @seskar.js.JsValue("finish")
        fun finish(): node.events.EventType<Duplex, js.array.JsTuple>

        @seskar.js.JsValue("pause")
        fun pause(): node.events.EventType<Duplex, js.array.JsTuple>

        @seskar.js.JsValue("pipe")
        fun pipe(): node.events.EventType<Duplex, js.array.JsTuple1<Readable>>

        @seskar.js.JsValue("readable")
        fun readable(): node.events.EventType<Duplex, js.array.JsTuple>

        @seskar.js.JsValue("resume")
        fun resume(): node.events.EventType<Duplex, js.array.JsTuple>

        @seskar.js.JsValue("unpipe")
        fun unpipe(): node.events.EventType<Duplex, js.array.JsTuple1<Readable>>
    }
}
