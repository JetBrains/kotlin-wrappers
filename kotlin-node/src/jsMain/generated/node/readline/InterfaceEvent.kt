// Generated by Karakum - do not modify it manually!

package node.readline


@seskar.js.JsVirtual
sealed external interface InterfaceEvent {
    sealed interface CLOSE : node.events.LegacyEventType
    sealed interface LINE : node.events.LegacyEventType
    sealed interface PAUSE : node.events.LegacyEventType
    sealed interface RESUME : node.events.LegacyEventType
    sealed interface SIGCONT : node.events.LegacyEventType
    sealed interface SIGINT : node.events.LegacyEventType
    sealed interface SIGTSTP : node.events.LegacyEventType
    sealed interface HISTORY : node.events.LegacyEventType

    companion object {
        @seskar.js.JsValue("close")
        val CLOSE: CLOSE

        @seskar.js.JsValue("line")
        val LINE: LINE

        @seskar.js.JsValue("pause")
        val PAUSE: PAUSE

        @seskar.js.JsValue("resume")
        val RESUME: RESUME

        @seskar.js.JsValue("SIGCONT")
        val SIGCONT: SIGCONT

        @seskar.js.JsValue("SIGINT")
        val SIGINT: SIGINT

        @seskar.js.JsValue("SIGTSTP")
        val SIGTSTP: SIGTSTP

        @seskar.js.JsValue("history")
        val HISTORY: HISTORY

        @seskar.js.JsValue("close")
        fun close(): node.events.EventType<Interface, js.array.JsTuple>

        @seskar.js.JsValue("line")
        fun line(): node.events.EventType<Interface, js.array.JsTuple1<String>>

        @seskar.js.JsValue("pause")
        fun pause(): node.events.EventType<Interface, js.array.JsTuple>

        @seskar.js.JsValue("resume")
        fun resume(): node.events.EventType<Interface, js.array.JsTuple>

        @seskar.js.JsValue("SIGCONT")
        fun SIGCONT(): node.events.EventType<Interface, js.array.JsTuple>

        @seskar.js.JsValue("SIGINT")
        fun SIGINT(): node.events.EventType<Interface, js.array.JsTuple>

        @seskar.js.JsValue("SIGTSTP")
        fun SIGTSTP(): node.events.EventType<Interface, js.array.JsTuple>

        @seskar.js.JsValue("history")
        fun history(): node.events.EventType<Interface, js.array.JsTuple1<js.array.ReadonlyArray<String>>>
    }
}
