// Generated by Karakum - do not modify it manually!

package node.inspector.runtime

sealed external interface CallFunctionOnParameterType {
    /**
     * Declaration of the function to call.
     */
    var functionDeclaration: String

    /**
     * Identifier of the object to call function on. Either objectId or executionContextId should be specified.
     */
    var objectId: RemoteObjectId?

    /**
     * Call arguments. All call arguments must belong to the same JavaScript world as the target object.
     */
    var arguments: js.array.ReadonlyArray<CallArgument>?

    /**
     * In silent mode exceptions thrown during evaluation are not reported and do not pause execution. Overrides <code>setPauseOnException</code> state.
     */
    var silent: Boolean?

    /**
     * Whether the result is expected to be a JSON object which should be sent by value.
     */
    var returnByValue: Boolean?

    /**
     * Whether preview should be generated for the result.
     * @experimental
     */
    var generatePreview: Boolean?

    /**
     * Whether execution should be treated as initiated by user in the UI.
     */
    var userGesture: Boolean?

    /**
     * Whether execution should <code>await</code> for resulting value and return once awaited promise is resolved.
     */
    var awaitPromise: Boolean?

    /**
     * Specifies execution context which global object will be used to call function on. Either executionContextId or objectId should be specified.
     */
    var executionContextId: ExecutionContextId?

    /**
     * Symbolic group name that can be used to release multiple objects. If objectGroup is not specified and objectId is, objectGroup will be inherited from object.
     */
    var objectGroup: String?
}
