// Generated by Karakum - do not modify it manually!

package node.inspector.profiler

/**
 * Profile node. Holds callsite information, execution statistics and child nodes.
 */
sealed external interface ProfileNode {
    /**
     * Unique id of the node.
     */
    var id: Double

    /**
     * Function location.
     */
    var callFrame: node.inspector.runtime.CallFrame

    /**
     * Number of samples where this node was on top of the call stack.
     */
    var hitCount: Double?

    /**
     * Child node ids.
     */
    var children: js.array.ReadonlyArray<Double>?

    /**
     * The reason of being not optimized. The function may be deoptimized or marked as don't optimize.
     */
    var deoptReason: String?

    /**
     * An array of source position ticks.
     */
    var positionTicks: js.array.ReadonlyArray<PositionTickInfo>?
}
