// Generated by Karakum - do not modify it manually!

package node.process

sealed external interface ProcessPermission {
    /**
     * Verifies that the process is able to access the given scope and reference.
     * If no reference is provided, a global scope is assumed, for instance, `process.permission.has('fs.read')`
     * will check if the process has ALL file system read permissions.
     *
     * The reference has a meaning based on the provided scope. For example, the reference when the scope is File System means files and folders.
     *
     * The available scopes are:
     *
     * * `fs` - All File System
     * * `fs.read` - File System read operations
     * * `fs.write` - File System write operations
     * * `child` - Child process spawning operations
     * * `worker` - Worker thread spawning operation
     *
     * ```js
     * // Check if the process has permission to read the README file
     * process.permission.has('fs.read', './README.md');
     * // Check if the process has read permission operations
     * process.permission.has('fs.read');
     * ```
     * @since v20.0.0
     */
    fun has(scope: String, reference: String = definedExternally): Boolean
}
