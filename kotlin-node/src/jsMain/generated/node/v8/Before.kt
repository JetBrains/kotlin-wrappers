// Generated by Karakum - do not modify it manually!

package node.v8

import js.promise.Promise

/**
 * Called before a promise continuation executes. This can be in the form of `then()`, `catch()`, or `finally()` handlers or an await resuming.
 *
 * The before callback will be called 0 to N times. The before callback will typically be called 0 times if no continuation was ever made for the promise.
 * The before callback may be called many times in the case where many continuations have been made from the same promise.
 * @since v17.1.0, v16.14.0
 */
sealed external interface Before {
    @seskar.js.JsNative
    operator fun invoke(promise: Promise<Any?>): Unit
}
