// Generated by Karakum - do not modify it manually!

package node.tls


sealed external interface TLSSocketEvent {
    sealed interface OCSPRESPONSE : node.events.LegacyEventType
    sealed interface SECURECONNECT : node.events.LegacyEventType
    sealed interface SESSION : node.events.LegacyEventType
    sealed interface KEYLOG : node.events.LegacyEventType

    companion object {
        @seskar.js.JsValue("OCSPResponse")
        val OCSPRESPONSE: OCSPRESPONSE

        @seskar.js.JsValue("secureConnect")
        val SECURECONNECT: SECURECONNECT

        @seskar.js.JsValue("session")
        val SESSION: SESSION

        @seskar.js.JsValue("keylog")
        val KEYLOG: KEYLOG

        @seskar.js.JsValue("OCSPResponse")
        fun OCSPResponse(): node.events.EventType<TLSSocket, js.array.JsTuple1<node.buffer.Buffer>>

        @seskar.js.JsValue("secureConnect")
        fun secureConnect(): node.events.EventType<TLSSocket, js.array.JsTuple>

        @seskar.js.JsValue("session")
        fun session(): node.events.EventType<TLSSocket, js.array.JsTuple1<node.buffer.Buffer>>

        @seskar.js.JsValue("keylog")
        fun keylog(): node.events.EventType<TLSSocket, js.array.JsTuple1<node.buffer.Buffer>>
    }
}
