// Generated by Karakum - do not modify it manually!

package node.http2


@seskar.js.JsVirtual
sealed external interface ClientHttp2SessionEvent {
    sealed interface ALTSVC : node.events.LegacyEventType
    sealed interface ORIGIN : node.events.LegacyEventType
    sealed interface CONNECT : node.events.LegacyEventType
    sealed interface STREAM : node.events.LegacyEventType

    companion object {
        @seskar.js.JsValue("altsvc")
        val ALTSVC: ALTSVC

        @seskar.js.JsValue("origin")
        val ORIGIN: ORIGIN

        @seskar.js.JsValue("connect")
        val CONNECT: CONNECT

        @seskar.js.JsValue("stream")
        val STREAM: STREAM

        @seskar.js.JsValue("altsvc")
        fun altsvc(): node.events.EventType<ClientHttp2Session, js.array.JsTuple3<String, String, Double>>

        @seskar.js.JsValue("origin")
        fun origin(): node.events.EventType<ClientHttp2Session, js.array.JsTuple1<js.array.ReadonlyArray<String>>>

        @seskar.js.JsValue("connect")
        fun connect(): node.events.EventType<ClientHttp2Session, js.array.JsTuple2<ClientHttp2Session, Any /* net.Socket | tls.TLSSocket */>>

        @seskar.js.JsValue("stream")
        fun stream(): node.events.EventType<ClientHttp2Session, js.array.JsTuple3<ClientHttp2Stream, ClientHttp2SessionAddListenerListenerHeaders, Double>>
    }
}
