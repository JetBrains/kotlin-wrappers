// Generated by Karakum - do not modify it manually!

@file:JsModule("semver/functions/compare-build")

package semver

/* import semver = require("../index"); */

/* import SemVer = require("../classes/semver"); */

/**
 * Compares two versions including build identifiers (the bit after `+` in the semantic version string).
 *
 * Sorts in ascending order when passed to `Array.sort()`.
 *
 * @return
 * - `0` if `v1` == `v2`
 * - `1` if `v1` is greater
 * - `-1` if `v2` is greater.
 *
 * @since 6.1.0
 */
external fun compareBuild(a: String, b: String): Int

/**
 * Compares two versions including build identifiers (the bit after `+` in the semantic version string).
 *
 * Sorts in ascending order when passed to `Array.sort()`.
 *
 * @return
 * - `0` if `v1` == `v2`
 * - `1` if `v1` is greater
 * - `-1` if `v2` is greater.
 *
 * @since 6.1.0
 */
external fun compareBuild(a: String, b: String, optionsOrLoose: Boolean = definedExternally): Int

/**
 * Compares two versions including build identifiers (the bit after `+` in the semantic version string).
 *
 * Sorts in ascending order when passed to `Array.sort()`.
 *
 * @return
 * - `0` if `v1` == `v2`
 * - `1` if `v1` is greater
 * - `-1` if `v2` is greater.
 *
 * @since 6.1.0
 */
external fun compareBuild(a: String, b: String, optionsOrLoose: semver.Options = definedExternally): Int

/**
 * Compares two versions including build identifiers (the bit after `+` in the semantic version string).
 *
 * Sorts in ascending order when passed to `Array.sort()`.
 *
 * @return
 * - `0` if `v1` == `v2`
 * - `1` if `v1` is greater
 * - `-1` if `v2` is greater.
 *
 * @since 6.1.0
 */
external fun compareBuild(a: String, b: SemVer): Int

/**
 * Compares two versions including build identifiers (the bit after `+` in the semantic version string).
 *
 * Sorts in ascending order when passed to `Array.sort()`.
 *
 * @return
 * - `0` if `v1` == `v2`
 * - `1` if `v1` is greater
 * - `-1` if `v2` is greater.
 *
 * @since 6.1.0
 */
external fun compareBuild(a: String, b: SemVer, optionsOrLoose: Boolean = definedExternally): Int

/**
 * Compares two versions including build identifiers (the bit after `+` in the semantic version string).
 *
 * Sorts in ascending order when passed to `Array.sort()`.
 *
 * @return
 * - `0` if `v1` == `v2`
 * - `1` if `v1` is greater
 * - `-1` if `v2` is greater.
 *
 * @since 6.1.0
 */
external fun compareBuild(a: String, b: SemVer, optionsOrLoose: semver.Options = definedExternally): Int

/**
 * Compares two versions including build identifiers (the bit after `+` in the semantic version string).
 *
 * Sorts in ascending order when passed to `Array.sort()`.
 *
 * @return
 * - `0` if `v1` == `v2`
 * - `1` if `v1` is greater
 * - `-1` if `v2` is greater.
 *
 * @since 6.1.0
 */
external fun compareBuild(a: SemVer, b: String): Int

/**
 * Compares two versions including build identifiers (the bit after `+` in the semantic version string).
 *
 * Sorts in ascending order when passed to `Array.sort()`.
 *
 * @return
 * - `0` if `v1` == `v2`
 * - `1` if `v1` is greater
 * - `-1` if `v2` is greater.
 *
 * @since 6.1.0
 */
external fun compareBuild(a: SemVer, b: String, optionsOrLoose: Boolean = definedExternally): Int

/**
 * Compares two versions including build identifiers (the bit after `+` in the semantic version string).
 *
 * Sorts in ascending order when passed to `Array.sort()`.
 *
 * @return
 * - `0` if `v1` == `v2`
 * - `1` if `v1` is greater
 * - `-1` if `v2` is greater.
 *
 * @since 6.1.0
 */
external fun compareBuild(a: SemVer, b: String, optionsOrLoose: semver.Options = definedExternally): Int

/**
 * Compares two versions including build identifiers (the bit after `+` in the semantic version string).
 *
 * Sorts in ascending order when passed to `Array.sort()`.
 *
 * @return
 * - `0` if `v1` == `v2`
 * - `1` if `v1` is greater
 * - `-1` if `v2` is greater.
 *
 * @since 6.1.0
 */
external fun compareBuild(a: SemVer, b: SemVer): Int

/**
 * Compares two versions including build identifiers (the bit after `+` in the semantic version string).
 *
 * Sorts in ascending order when passed to `Array.sort()`.
 *
 * @return
 * - `0` if `v1` == `v2`
 * - `1` if `v1` is greater
 * - `-1` if `v2` is greater.
 *
 * @since 6.1.0
 */
external fun compareBuild(a: SemVer, b: SemVer, optionsOrLoose: Boolean = definedExternally): Int

/**
 * Compares two versions including build identifiers (the bit after `+` in the semantic version string).
 *
 * Sorts in ascending order when passed to `Array.sort()`.
 *
 * @return
 * - `0` if `v1` == `v2`
 * - `1` if `v1` is greater
 * - `-1` if `v2` is greater.
 *
 * @since 6.1.0
 */
external fun compareBuild(a: SemVer, b: SemVer, optionsOrLoose: semver.Options = definedExternally): Int

/* export = compareBuild; */
