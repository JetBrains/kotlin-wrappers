// Automatically generated - do not modify!

package web.input

import js.reflect.unsafeCast
import web.events.EventType
import web.uievents.UIEvent
import kotlin.js.definedExternally

/**
 * The DOM **`CompositionEvent`** represents events that occur due to the user indirectly entering text.
 *
 * [MDN Reference](https://developer.mozilla.org/docs/Web/API/CompositionEvent)
 */
open external class CompositionEvent(
    override val type: EventType<CompositionEvent>,
    init: CompositionEventInit = definedExternally,
) : UIEvent {
    /**
     * The **`data`** read-only property of the CompositionEvent interface returns the characters generated by the input method that raised the event; its exact nature varies depending on the type of event that generated the `CompositionEvent` object.
     *
     * [MDN Reference](https://developer.mozilla.org/docs/Web/API/CompositionEvent/data)
     */
    val data: String

    companion object
}

inline fun CompositionEvent.asInit(): CompositionEventInit =
    unsafeCast(this)

inline val CompositionEvent.Companion.COMPOSITION_END: EventType<CompositionEvent>
    get() = EventType("compositionend")

inline val CompositionEvent.Companion.COMPOSITION_START: EventType<CompositionEvent>
    get() = EventType("compositionstart")

inline val CompositionEvent.Companion.COMPOSITION_UPDATE: EventType<CompositionEvent>
    get() = EventType("compositionupdate")
